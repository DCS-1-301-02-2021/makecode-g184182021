scene.set_background_color(8)
spacePlane=sprites.create(img("""
    ........................................
    ........................................
    ........................................
    ....................ffff................
    ..................ffddddff..............
    .................fddddd11df.............
    .................fdddddd11df............
    ...........ffff.fdddddddd1df............
    .........ffddddffddddddddddf............
    ........fddddd11dfdddddddddf............
    ........fdddddd11fdddddddddf............
    .......fdddddddd1dfdddddddf.............
    .......fddddddddddfddddddf2f............
    .......fddddddddddfdddddff22f.f.........
    .......fddddddddddfdddfff5f22fdf........
    .......fddddddddddffff55f5f22fdf........
    ........fddddddffff5555f5ffffff.........
    .......f2ffffff5555555f5f5f.............
    ......f22f5555555555555555f.............
    ...ff.f22f55ff5555555555ff..............
    ...fdff2ff5f555555f55fff................
    ...fddff.f55f55555fffddf................
    ....ff...f55555ffffdddf.................
    .........f55fffddf1fdf..................
    ..........ff..fdff11f...................
    ...............f1f1f....................
    ..............f9f9f.....................
    .............f99f99f....................
    ............f99f.f99f...................
    .............ff...fff...................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
    ........................................
"""),SpriteKind.player)
info.set_life(3)
spacePlane.set_stay_in_screen(True)
controller.move_sprite(spacePlane,200,200)
def on_a_pressed():
    missile=sprites.create_projectile_from_sprite(
        img("""
            . . . . . . . . . . . . . . . .
            . . . . . . . . . . . . . . . .
            . . . . . . . . . . . . . . . .
            . . . . . . . f f f f f f . . .
            . . . . . . f f 5 5 5 f f . . .
            . . . . . f 5 5 5 1 5 5 f . . .
            . . . . f 5 5 5 5 5 5 5 f . . .
            . . . f 5 5 5 5 5 5 5 5 f . . .
            . . . . f f 5 5 5 5 5 5 f . . .
            . . . . . f f 5 5 5 5 5 f . . .
            . . . . . . f 5 5 5 5 5 f . . .
            . . . . . . . f f f f f . . . .
            . . . . . . . . . . . . . . . .
            . . . . . . . . . . . . . . . .
            . . . . . . . . . . . . . . . .
        """),spacePlane,200,0)
controller.A.on_event(
        ControllerButtonEvent.PRESSED, on_a_pressed)
def on_update():
    bogy=sprites.create(assets.image("""hand"""),
        SpriteKind.enemy)
    bogy.set_velocity(-100, randint(-30,30))
    bogy.y=randint(0,scene.screen_height())
    bogy.left=scene.screen_width()
    bogy.set_flag(SpriteFlag.AUTO_DESTROY, True)
game.on_update_interval(500, on_update)
def on_hit(sprite,othersprite):
    othersprite.destroy(effects.fire, 100)
    info.change_score_by(1)
sprites.on_overlap(SpriteKind.projectile, SpriteKind.enemy,
    on_hit)
def on_crash(sprite, othersprite):
    othersprite.destroy()
    info.change_life_by(-1)
sprites.on_overlap(SpriteKind.player, SpriteKind.enemy,
    on_crash)